/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$arrow_slider_name = 'arrow-slider';
$arrow_slider_x = 76px;
$arrow_slider_y = 52px;
$arrow_slider_offset_x = -76px;
$arrow_slider_offset_y = -52px;
$arrow_slider_width = 18px;
$arrow_slider_height = 14px;
$arrow_slider_total_width = 94px;
$arrow_slider_total_height = 88px;
$arrow_slider_image = '../images/sprites/input.png';
$arrow_slider = 76px 52px -76px -52px 18px 14px 94px 88px '../images/sprites/input.png' 'arrow-slider';
$arrow_slider_2_name = 'arrow-slider@2';
$arrow_slider_2_x = 0px;
$arrow_slider_2_y = 74px;
$arrow_slider_2_offset_x = 0px;
$arrow_slider_2_offset_y = -74px;
$arrow_slider_2_width = 18px;
$arrow_slider_2_height = 14px;
$arrow_slider_2_total_width = 94px;
$arrow_slider_2_total_height = 88px;
$arrow_slider_2_image = '../images/sprites/input.png';
$arrow_slider_2 = 0px 74px 0px -74px 18px 14px 94px 88px '../images/sprites/input.png' 'arrow-slider@2';
$checkbox_name = 'checkbox';
$checkbox_x = 76px;
$checkbox_y = 0px;
$checkbox_offset_x = -76px;
$checkbox_offset_y = 0px;
$checkbox_width = 18px;
$checkbox_height = 18px;
$checkbox_total_width = 94px;
$checkbox_total_height = 88px;
$checkbox_image = '../images/sprites/input.png';
$checkbox = 76px 0px -76px 0px 18px 18px 94px 88px '../images/sprites/input.png' 'checkbox';
$checkbox_2_name = 'checkbox@2';
$checkbox_2_x = 76px;
$checkbox_2_y = 26px;
$checkbox_2_offset_x = -76px;
$checkbox_2_offset_y = -26px;
$checkbox_2_width = 18px;
$checkbox_2_height = 18px;
$checkbox_2_total_width = 94px;
$checkbox_2_total_height = 88px;
$checkbox_2_image = '../images/sprites/input.png';
$checkbox_2 = 76px 26px -76px -26px 18px 18px 94px 88px '../images/sprites/input.png' 'checkbox@2';
$checked_name = 'checked';
$checked_x = 0px;
$checked_y = 38px;
$checked_offset_x = 0px;
$checked_offset_y = -38px;
$checked_width = 22px;
$checked_height = 28px;
$checked_total_width = 94px;
$checked_total_height = 88px;
$checked_image = '../images/sprites/input.png';
$checked = 0px 38px 0px -38px 22px 28px 94px 88px '../images/sprites/input.png' 'checked';
$checked_2_name = 'checked@2';
$checked_2_x = 30px;
$checked_2_y = 38px;
$checked_2_offset_x = -30px;
$checked_2_offset_y = -38px;
$checked_2_width = 22px;
$checked_2_height = 28px;
$checked_2_total_width = 94px;
$checked_2_total_height = 88px;
$checked_2_image = '../images/sprites/input.png';
$checked_2 = 30px 38px -30px -38px 22px 28px 94px 88px '../images/sprites/input.png' 'checked@2';
$radio_activ_name = 'radio-activ';
$radio_activ_x = 26px;
$radio_activ_y = 74px;
$radio_activ_offset_x = -26px;
$radio_activ_offset_y = -74px;
$radio_activ_width = 14px;
$radio_activ_height = 14px;
$radio_activ_total_width = 94px;
$radio_activ_total_height = 88px;
$radio_activ_image = '../images/sprites/input.png';
$radio_activ = 26px 74px -26px -74px 14px 14px 94px 88px '../images/sprites/input.png' 'radio-activ';
$radio_activ_2_name = 'radio-activ@2';
$radio_activ_2_x = 48px;
$radio_activ_2_y = 74px;
$radio_activ_2_offset_x = -48px;
$radio_activ_2_offset_y = -74px;
$radio_activ_2_width = 14px;
$radio_activ_2_height = 14px;
$radio_activ_2_total_width = 94px;
$radio_activ_2_total_height = 88px;
$radio_activ_2_image = '../images/sprites/input.png';
$radio_activ_2 = 48px 74px -48px -74px 14px 14px 94px 88px '../images/sprites/input.png' 'radio-activ@2';
$radio_name = 'radio';
$radio_x = 0px;
$radio_y = 0px;
$radio_offset_x = 0px;
$radio_offset_y = 0px;
$radio_width = 30px;
$radio_height = 30px;
$radio_total_width = 94px;
$radio_total_height = 88px;
$radio_image = '../images/sprites/input.png';
$radio = 0px 0px 0px 0px 30px 30px 94px 88px '../images/sprites/input.png' 'radio';
$radio_2_name = 'radio@2';
$radio_2_x = 38px;
$radio_2_y = 0px;
$radio_2_offset_x = -38px;
$radio_2_offset_y = 0px;
$radio_2_width = 30px;
$radio_2_height = 30px;
$radio_2_total_width = 94px;
$radio_2_total_height = 88px;
$radio_2_image = '../images/sprites/input.png';
$radio_2 = 38px 0px -38px 0px 30px 30px 94px 88px '../images/sprites/input.png' 'radio@2';
$sp_input_width = 94px;
$sp_input_height = 88px;
$sp_input_image = '../images/sprites/input.png';
$sp_input_sprites = $arrow_slider $arrow_slider_2 $checkbox $checkbox_2 $checked $checked_2 $radio_activ $radio_activ_2 $radio $radio_2;
$sp_input = 94px 88px '../images/sprites/input.png' $sp_input_sprites;

// These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

// The list formatted variables are intended for mixins like `retinaSprite` and `retinaSprites`.


/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}


// The `retinaSprite` mixin sets up rules and a media query for a sprite/retina sprite.
// It should be used with a "retina group" variable.
//
// The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/
//
// $icon_home_group = 'icon-home' $icon_home $icon_home_2x;
//
// .icon-home {
//     retinaSprite($icon_home_group)
// }


spriteBackgroundSize($sprite) {
	background-size $sprite[6] $sprite[7]
}

retinaSprite($retina_group) {
	$normal_sprite = $retina_group[1]
	$retina_sprite = $retina_group[2]
	sprite($normal_sprite)

	@media (-webkit-min-device-pixel-ratio: 2),
				 (min-resolution: 192dpi) {
		spriteImage($retina_sprite)
		spriteBackgroundSize($normal_sprite)
	}
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}

// The `retinaSprites` mixin generates a CSS rule and media query for retina groups
// This yields the same output as CSS retina template but can be overridden in Stylus
//
// retinaSprites($retina_groups)

retinaSprites($retina_groups) {
	for $retina_group in $retina_groups {
		$sprite_name = $retina_group[0];
		.{$sprite_name} {
			retinaSprite $retina_group
		}
	}
}
